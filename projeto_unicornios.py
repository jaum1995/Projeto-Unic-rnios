# -*- coding: utf-8 -*-
"""Projeto Unicornios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TB3djYqeZT3DRZJ4XOpLsoIJBGUB7lrK

Sobre o conjunto de dados
"Unicórnio" é um termo usado na indústria de capital de risco para descrever uma startup de capital fechado com valor superior a US$ 1 bilhão. O termo foi popularizado pela primeira vez pela capitalista de risco Aileen Lee, fundadora da Cowboy Ventures, um fundo de capital de risco com sede em Palo Alto, Califórnia.

Unicórnios também podem se referir a um fenômeno de recrutamento no setor de recursos humanos (RH). Os gerentes de RH podem ter grandes expectativas para preencher um cargo, levando-os a procurar candidatos com qualificações superiores às exigidas para um cargo específico. Em essência, esses gerentes estão procurando um unicórnio, o que leva a uma desconexão entre seu candidato ideal e quem eles podem contratar do grupo de pessoas disponíveis.
"""

[] # Importar as libs
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

[] # Ler os dados
Base_Dados = pd.read_csv('Startups+in+2021+end.csv')

# Verificar Dimensão
Base_Dados.shape

[] # Primeiros Registros
Base_Dados.head()

Base_Dados.columns

# Renomear
Base_Dados.rename( columns={
    'Unnamed: 0' : 'Id',
    'Company' : 'Empresa',
    'Valuation ($B)': 'Valor ($)',
    'Date Joined' : 'Data de Adesão',
    'Country' : 'País',
    'City' : 'Cidade',
    'Industry' : 'Setor',
    'Select Investors' : 'Investidores',
}, inplace=True)

# Verificar Tipo de Informação
Base_Dados.info()

Base_Dados.isnull().sum()

# Grafica
plt.figure( figsize=(15,6) )
plt.title('Analisando Campos Nulos')
sns.heatmap( Base_Dados.isnull(), cbar=False );

# Campos Unicos
Base_Dados.nunique()

Base_Dados['Setor'].unique()

# Valores Unicos - Rank
Base_Dados['Setor'].value_counts( normalize=True )

plt.figure( figsize=(15,6) )
plt.title('Analise dos Setores')
plt.bar( Base_Dados['Setor'].value_counts().index, Base_Dados['Setor'].value_counts() )
plt.xticks( rotation=45, ha='right' );

Analise = round( Base_Dados['País'].value_counts( normalize=True) * 100, 1 )

# Plot geral dos Países
plt.figure( figsize=(15,6) )
plt.title('Analise dos Países geradores de Unicórnios')
plt.pie(
    Analise.head(10),
    labels = Analise.index[0:10],
    shadow=True,
    startangle=180,
    autopct='%1.1f%%'

);

# Conversão para Data
Base_Dados['Data de Adesão'] = pd.to_datetime( Base_Dados['Data de Adesão'])

Base_Dados['Data de Adesão'].head()

# Extrair o Ano e mês
Base_Dados['Mes'] = pd.DatetimeIndex( Base_Dados['Data de Adesão'] ).month
Base_Dados['Ano'] = pd.DatetimeIndex( Base_Dados['Data de Adesão'] ).year

Base_Dados.head()

# Tabela Analítica
Analise_Agrupada = Base_Dados.groupby( by=['País', 'Ano', 'Mes', 'Empresa'] ).count()['Id'].reset_index()

Analise_Agrupada

Analise_Agrupada.loc[
    Analise_Agrupada['País'] == 'Brazil'
]

# Transformando a coluna valor
Base_Dados['Valor ($)'] = pd.to_numeric( Base_Dados['Valor ($)'].apply( lambda Linha: Linha.replace('$', '')))

Base_Dados.head()

# Tabela Analítica
Analise_Pais = Base_Dados.groupby( by=['País'] ).sum()['Valor ($)'].reset_index()

Analise_Pais.head()

Analise_Valor = Analise_Pais.sort_values('Valor ($)', ascending=False)

Analise_Valor.head()

plt.figure( figsize=(15,6))
plt.plot( Analise_Valor['País'], Analise_Valor['Valor ($)'] )
plt.title('Analise do Valor por País')
plt.xticks( rotation=45, ha='right' );

